--Harry Goodwin
--08/03/2020
--Intro to SQL


--create customers table
CREATE TABLE CUSTOMERS
(
	CUSTOMER_ID NUMBER(10) NOT NULL CONSTRAINT customer_id_pk PRIMARY KEY,
	LAST_NAME VARCHAR(25) NOT NULL,
	FIRST_NAME VARCHAR(25) NOT NULL,
	HOME_PHONE VARCHAR(12) NOT NULL,
	ADDRESS VARCHAR(100) NOT NULL,
	CITY VARCHAR(30) NOT NULL,
	STATE VARCHAR(12) NOT NULL,
	EMAIL VARCHAR(25),
	CELL_PHONE VARCHAR(12) NOT NULL
);


--create movies table
CREATE TABLE MOVIES
(
	TITLE_ID NUMBER(10) NOT NULL CONSTRAINT title_id_pk PRIMARY KEY,
	TITLE VARCHAR(60) NOT NULL,
	DESCRIPTION VARCHAR(400) NOT NULL,
	RATING VARCHAR(4) CONSTRAINT rating CHECK (RATING IN('G','PG''R','PG13')),
	CATEGORY VARCHAR(20) CHECK (CATEGORY IN('DRAMA', 'COMEDY', 'ACTION', 'CHILD', 
							'SCIFI', 'DOCUMENTARY')),
	RELEASE_DATE DATE NOT NULL
);


--create media table
CREATE TABLE MEDIA
(
	MEDIA_ID NUMBER(10) NOT NULL CONSTRAINT media_id_pk PRIMARY KEY,
	FORMAT VARCHAR(3) NOT NULL,
	TITLE_ID NUMBER(10) NOT NULL CONSTRAINT media_title_id_fk REFERENCES movies(TITLE_ID)
);


--create rental_history table
CREATE TABLE RENTAL_HISTORY
(
	MEDIA_ID NUMBER(10) NOT NULL CONSTRAINT media_id_fk REFERENCES media (media_id),
	RENTAL_DATE DATE DEFAULT SYSDATE NOT NULL,
	CUSTOMER_ID NUMBER(10) NOT NULL CONSTRAINT customer_id_fk REFERENCES customers(CUSTOMER_ID),
	RETURN_DATE DATE,
	CONSTRAINT rental_history_pk PRIMARY KEY (media_id, rental_date)
);


--create actors table
CREATE TABLE ACTORS
(
	ACTOR_ID NUMBER(10) NOT NULL CONSTRAINT actor_id_pk PRIMARY KEY,
	STAGE_NAME VARCHAR(40) NOT NULL,
	FIRST_NAME VARCHAR(25) NOT NULL,
	LAST_NAME VARCHAR(25) NOT NULL,
	BIRTH_DATE DATE NOT NULL
);


--creating star_billings table
CREATE TABLE STAR_BILLINGS
(
	ACTOR_ID NUMBER(10) NOT NULL CONSTRAINT actor_id_fk REFERENCES actors(ACTOR_ID),
	TITLE_ID NUMBER(10) NOT NULL CONSTRAINT title_id_fk REFERENCES movies(TITLE_ID),
	COMMENTS VARCHAR(40),
	CONSTRAINT star_billings_pk PRIMARY KEY (actor_id, title_id)
);


--create title_unavail view, READ ONLY
CREATE FORCE VIEW TITLE_UNAVAIL
	AS SELECT M.TITLE, ME.MEDIA_ID, R.RENTAL_DATE, R.RETURN_DATE
FROM 
	MOVIES M, MEDIA ME, RENTAL_HISTORY R
WHERE 
	M.TITLE_ID = ME.TITLE_ID
	and R.MEDIA_ID = ME.MEDIA_ID
	and RETURN_DATE IS NULL
WITH READ ONLY;


--Drop sequences if they exist
DROP SEQUENCE "CUST_SEQ";
DROP SEQUENCE "TITLE_SEQ";
DROP SEQUENCE "MEDIA_SEQ";
DROP SEQUENCE "ACTOR_SEQ";

    
--create sequence for customerID
CREATE SEQUENCE CUST_SEQ
    INCREMENT BY 1 
    MINVALUE 101 
    MAXVALUE 50000 
    NOCACHE NOCYCLE;

--create sequence for titleID
CREATE SEQUENCE TITLE_SEQ
INCREMENT BY 1 
    MINVALUE 1 
    MAXVALUE 50000
    NOCACHE NOCYCLE;

--create sequence for mediaID    
CREATE SEQUENCE MEDIA_SEQ
    INCREMENT BY 1 
    MINVALUE 92 
    MAXVALUE 50000 
    NOCACHE NOCYCLE;


--create sequence for actorID
CREATE SEQUENCE ACTOR_SEQ
    INCREMENT BY 1 
    MINVALUE 1001 
    MAXVALUE 50000 
    NOCACHE NOCYCLE;


--create synonym tu for view tital_unavail
CREATE SYNONYM TU
FOR TITLE_UNAVAIL;


--create index for customers last names
CREATE INDEX customer_lastname_idx ON CUSTOMERS(LAST_NAME);
